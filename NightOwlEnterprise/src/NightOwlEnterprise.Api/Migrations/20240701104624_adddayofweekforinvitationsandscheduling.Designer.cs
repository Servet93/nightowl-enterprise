// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NightOwlEnterprise.Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240701104624_adddayofweekforinvitationsandscheduling")]
    partial class adddayofweekforinvitationsandscheduling
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Endpoints.SubscriptionHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InvoiceId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InvoiceState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastError")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("SubscriptionEndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubscriptionStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SubscriptionState")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("SubscriptionHistories");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ApplicationRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PasswordResetCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("PasswordResetCodeExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshTokenExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<string>("SubscriptionId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<int>("UserType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachDetail", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<bool?>("ChangedDepartmentType")
                        .HasColumnType("boolean");

                    b.Property<string>("DepartmentName")
                        .HasColumnType("text");

                    b.Property<int?>("DepartmentType")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<byte?>("FirstAytNet")
                        .HasColumnType("smallint");

                    b.Property<byte?>("FirstTytNet")
                        .HasColumnType("smallint");

                    b.Property<byte?>("FridayQuota")
                        .HasColumnType("smallint");

                    b.Property<int?>("FromDepartment")
                        .HasColumnType("integer");

                    b.Property<bool?>("GoneCramSchool")
                        .HasColumnType("boolean");

                    b.Property<string>("HighSchool")
                        .HasColumnType("text");

                    b.Property<float?>("HighSchoolGPA")
                        .HasColumnType("real");

                    b.Property<bool?>("IsGraduated")
                        .HasColumnType("boolean");

                    b.Property<byte?>("LastAytNet")
                        .HasColumnType("smallint");

                    b.Property<byte?>("LastTytNet")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Male")
                        .HasColumnType("boolean");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<byte?>("MondayQuota")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<bool?>("PrivateTutoring")
                        .HasColumnType("boolean");

                    b.Property<long?>("Rank")
                        .HasColumnType("bigint");

                    b.Property<byte?>("SaturdayQuota")
                        .HasColumnType("smallint");

                    b.Property<bool?>("School")
                        .HasColumnType("boolean");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.Property<byte?>("StudentQuota")
                        .HasColumnType("smallint");

                    b.Property<byte?>("SundayQuota")
                        .HasColumnType("smallint");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<byte?>("ThursdayQuota")
                        .HasColumnType("smallint");

                    b.Property<int?>("ToDepartment")
                        .HasColumnType("integer");

                    b.Property<byte?>("TuesdayQuota")
                        .HasColumnType("smallint");

                    b.Property<Guid?>("UniversityId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("UsedYoutube")
                        .HasColumnType("boolean");

                    b.Property<byte?>("WednesdayQuota")
                        .HasColumnType("smallint");

                    b.HasKey("CoachId");

                    b.HasIndex("UniversityId");

                    b.ToTable("CoachDetail");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachStudentTrainingSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<int?>("VideoDay")
                        .HasColumnType("integer");

                    b.Property<int?>("VoiceDay")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("StudentId");

                    b.ToTable("CoachStudentTrainingSchedules");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachYksRanking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Enter")
                        .HasColumnType("boolean");

                    b.Property<long?>("Rank")
                        .HasColumnType("bigint");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.ToTable("CoachYksRankings");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("boolean");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<Guid?>("ZoomMeetDetailId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("StudentId");

                    b.HasIndex("ZoomMeetDetailId")
                        .IsUnique();

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.DilNets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("YDT")
                        .HasColumnType("smallint");

                    b.HasKey("UserId");

                    b.ToTable("DilNets");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.MFNets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Biology")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Chemistry")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Geometry")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Mathematics")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Physics")
                        .HasColumnType("smallint");

                    b.HasKey("UserId");

                    b.ToTable("MFNets");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.SozelNets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Geography1")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Geography2")
                        .HasColumnType("smallint");

                    b.Property<byte?>("History1")
                        .HasColumnType("smallint");

                    b.Property<byte?>("History2")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Literature1")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Philosophy")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Religion")
                        .HasColumnType("smallint");

                    b.HasKey("UserId");

                    b.ToTable("SozelNets");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.TMNets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Geography")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Geometry")
                        .HasColumnType("smallint");

                    b.Property<byte?>("History")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Literature")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Mathematics")
                        .HasColumnType("smallint");

                    b.HasKey("UserId");

                    b.ToTable("TMNets");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.TYTNets", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("Biology")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Chemistry")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Geography")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Geometry")
                        .HasColumnType("smallint");

                    b.Property<byte?>("History")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Mathematics")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Philosophy")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Physics")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Religion")
                        .HasColumnType("smallint");

                    b.Property<byte?>("Turkish")
                        .HasColumnType("smallint");

                    b.HasKey("UserId");

                    b.ToTable("TYTNets");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringDil", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("YTD")
                        .HasColumnType("boolean");

                    b.HasKey("CoachId");

                    b.ToTable("PrivateTutoringDil");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringMF", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Biology")
                        .HasColumnType("boolean");

                    b.Property<bool>("Chemistry")
                        .HasColumnType("boolean");

                    b.Property<bool>("Geometry")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mathematics")
                        .HasColumnType("boolean");

                    b.Property<bool>("Physics")
                        .HasColumnType("boolean");

                    b.HasKey("CoachId");

                    b.ToTable("PrivateTutoringMF");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringSozel", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Geography1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Geography2")
                        .HasColumnType("boolean");

                    b.Property<bool>("History1")
                        .HasColumnType("boolean");

                    b.Property<bool>("History2")
                        .HasColumnType("boolean");

                    b.Property<bool>("Literature1")
                        .HasColumnType("boolean");

                    b.Property<bool>("Philosophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("Religion")
                        .HasColumnType("boolean");

                    b.HasKey("CoachId");

                    b.ToTable("PrivateTutoringSozel");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTM", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Geography")
                        .HasColumnType("boolean");

                    b.Property<bool>("Geometry")
                        .HasColumnType("boolean");

                    b.Property<bool>("History")
                        .HasColumnType("boolean");

                    b.Property<bool>("Literature")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mathematics")
                        .HasColumnType("boolean");

                    b.HasKey("CoachId");

                    b.ToTable("PrivateTutoringTM");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTYT", b =>
                {
                    b.Property<Guid>("CoachId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Biology")
                        .HasColumnType("boolean");

                    b.Property<bool>("Chemistry")
                        .HasColumnType("boolean");

                    b.Property<bool>("Geography")
                        .HasColumnType("boolean");

                    b.Property<bool>("Geometry")
                        .HasColumnType("boolean");

                    b.Property<bool>("History")
                        .HasColumnType("boolean");

                    b.Property<bool>("Mathematics")
                        .HasColumnType("boolean");

                    b.Property<bool>("Philosophy")
                        .HasColumnType("boolean");

                    b.Property<bool>("Physics")
                        .HasColumnType("boolean");

                    b.Property<bool>("Religion")
                        .HasColumnType("boolean");

                    b.Property<bool>("Turkish")
                        .HasColumnType("boolean");

                    b.HasKey("CoachId");

                    b.ToTable("PrivateTutoringTYT");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ProfilePhoto", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Photo")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("ProfilePhotos");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ResourcesAYT", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Biology")
                        .HasColumnType("text");

                    b.Property<string>("Chemistry")
                        .HasColumnType("text");

                    b.Property<string>("Geography")
                        .HasColumnType("text");

                    b.Property<string>("Geometry")
                        .HasColumnType("text");

                    b.Property<string>("History")
                        .HasColumnType("text");

                    b.Property<string>("Literature")
                        .HasColumnType("text");

                    b.Property<string>("Mathematics")
                        .HasColumnType("text");

                    b.Property<string>("Philosophy")
                        .HasColumnType("text");

                    b.Property<string>("Physics")
                        .HasColumnType("text");

                    b.Property<string>("Religion")
                        .HasColumnType("text");

                    b.Property<string>("Turkish")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("ResourcesAYT");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ResourcesTYT", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Biology")
                        .HasColumnType("text");

                    b.Property<string>("Chemistry")
                        .HasColumnType("text");

                    b.Property<string>("Geography")
                        .HasColumnType("text");

                    b.Property<string>("Geometry")
                        .HasColumnType("text");

                    b.Property<string>("History")
                        .HasColumnType("text");

                    b.Property<string>("Mathematics")
                        .HasColumnType("text");

                    b.Property<string>("Philosophy")
                        .HasColumnType("text");

                    b.Property<string>("Physics")
                        .HasColumnType("text");

                    b.Property<string>("Religion")
                        .HasColumnType("text");

                    b.Property<string>("Turkish")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("ResourcesTYT");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.StudentDetail", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("AytGoalNet")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Course")
                        .HasColumnType("boolean");

                    b.Property<string>("DesiredProfessionSchoolField")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("ExamType")
                        .HasColumnType("integer");

                    b.Property<string>("ExpectationsFromCoaching")
                        .HasColumnType("text");

                    b.Property<long?>("GoalRanking")
                        .HasColumnType("bigint");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<string>("HighSchool")
                        .HasColumnType("text");

                    b.Property<float?>("HighSchoolGPA")
                        .HasColumnType("real");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("ParentEmail")
                        .HasColumnType("text");

                    b.Property<string>("ParentMobile")
                        .HasColumnType("text");

                    b.Property<string>("ParentName")
                        .HasColumnType("text");

                    b.Property<string>("ParentSurname")
                        .HasColumnType("text");

                    b.Property<bool?>("PrivateTutoringAyt")
                        .HasColumnType("boolean");

                    b.Property<bool?>("PrivateTutoringTyt")
                        .HasColumnType("boolean");

                    b.Property<bool?>("School")
                        .HasColumnType("boolean");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Surname")
                        .HasColumnType("text");

                    b.Property<byte?>("TytGoalNet")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Youtube")
                        .HasColumnType("boolean");

                    b.HasKey("StudentId");

                    b.ToTable("StudentDetail");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Universities");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.UserDevice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("DeviceToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserDevices");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.VoiceCallsHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CallDetailResult")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Destination")
                        .HasColumnType("text");

                    b.Property<string>("DestinationResult")
                        .HasColumnType("text");

                    b.Property<Guid?>("InvitationId")
                        .HasColumnType("uuid");

                    b.Property<bool?>("Ok")
                        .HasColumnType("boolean");

                    b.Property<string>("Pair")
                        .HasColumnType("text");

                    b.Property<string>("Source")
                        .HasColumnType("text");

                    b.Property<string>("SourceResult")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("VoiceCallsHistories");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ZoomMeetDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CoachJoinUrl")
                        .HasColumnType("text");

                    b.Property<string>("CoachParticipantPinCode")
                        .HasColumnType("text");

                    b.Property<string>("CoachRegistrantId")
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("HostEmail")
                        .HasColumnType("text");

                    b.Property<Guid>("InvitationId")
                        .HasColumnType("uuid");

                    b.Property<string>("JoinUrl")
                        .HasColumnType("text");

                    b.Property<string>("MeetId")
                        .HasColumnType("text");

                    b.Property<string>("MeetingPasscode")
                        .HasColumnType("text");

                    b.Property<string>("RegistrationUrl")
                        .HasColumnType("text");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("StudentJoinUrl")
                        .HasColumnType("text");

                    b.Property<string>("StudentParticipantPinCode")
                        .HasColumnType("text");

                    b.Property<string>("StudentRegistrantId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ZoomMeetDetails");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Endpoints.SubscriptionHistory", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithMany("SubscriptionHistories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachDetail", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("CoachDetail")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.CoachDetail", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightOwlEnterprise.Api.Entities.University", "University")
                        .WithMany()
                        .HasForeignKey("UniversityId");

                    b.Navigation("Coach");

                    b.Navigation("University");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachStudentTrainingSchedule", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithMany("CoachStudentTrainingSchedules")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Student")
                        .WithMany("StudentCoachTrainingSchedules")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.CoachYksRanking", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithMany("CoachYksRankings")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Invitation", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithMany("InvitationsAsCoach")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Student")
                        .WithMany("InvitationsAsStudent")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NightOwlEnterprise.Api.Entities.ZoomMeetDetail", "ZoomMeetDetail")
                        .WithOne("Invitation")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Invitation", "ZoomMeetDetailId");

                    b.Navigation("Coach");

                    b.Navigation("Student");

                    b.Navigation("ZoomMeetDetail");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.DilNets", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("DilNets")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Nets.DilNets", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.MFNets", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("MfNets")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Nets.MFNets", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.SozelNets", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("SozelNets")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Nets.SozelNets", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.TMNets", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("TmNets")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Nets.TMNets", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.Nets.TYTNets", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("TytNets")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.Nets.TYTNets", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringDil", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("PrivateTutoringDil")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringDil", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringMF", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("PrivateTutoringMF")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringMF", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringSozel", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("PrivateTutoringSozel")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringSozel", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTM", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("PrivateTutoringTM")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTM", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTYT", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Coach")
                        .WithOne("PrivateTutoringTYT")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.PrivateTutoring.PrivateTutoringTYT", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ProfilePhoto", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("ProfilePhoto")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.ProfilePhoto", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ResourcesAYT", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("ResourcesAYT")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.ResourcesAYT", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ResourcesTYT", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithOne("ResourcesTYT")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.ResourcesTYT", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.StudentDetail", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "Student")
                        .WithOne("StudentDetail")
                        .HasForeignKey("NightOwlEnterprise.Api.Entities.StudentDetail", "StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.UserDevice", b =>
                {
                    b.HasOne("NightOwlEnterprise.Api.Entities.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ApplicationUser", b =>
                {
                    b.Navigation("CoachDetail")
                        .IsRequired();

                    b.Navigation("CoachStudentTrainingSchedules");

                    b.Navigation("CoachYksRankings");

                    b.Navigation("DilNets")
                        .IsRequired();

                    b.Navigation("InvitationsAsCoach");

                    b.Navigation("InvitationsAsStudent");

                    b.Navigation("MfNets")
                        .IsRequired();

                    b.Navigation("PrivateTutoringDil")
                        .IsRequired();

                    b.Navigation("PrivateTutoringMF")
                        .IsRequired();

                    b.Navigation("PrivateTutoringSozel")
                        .IsRequired();

                    b.Navigation("PrivateTutoringTM")
                        .IsRequired();

                    b.Navigation("PrivateTutoringTYT")
                        .IsRequired();

                    b.Navigation("ProfilePhoto")
                        .IsRequired();

                    b.Navigation("ResourcesAYT")
                        .IsRequired();

                    b.Navigation("ResourcesTYT")
                        .IsRequired();

                    b.Navigation("SozelNets")
                        .IsRequired();

                    b.Navigation("StudentCoachTrainingSchedules");

                    b.Navigation("StudentDetail")
                        .IsRequired();

                    b.Navigation("SubscriptionHistories");

                    b.Navigation("TmNets")
                        .IsRequired();

                    b.Navigation("TytNets")
                        .IsRequired();
                });

            modelBuilder.Entity("NightOwlEnterprise.Api.Entities.ZoomMeetDetail", b =>
                {
                    b.Navigation("Invitation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
